// Code generated by mockery v1.0.0
package mocks

import (
	"github.com/jdebes/slurpCwsImages-lambda/model"
	mock "github.com/stretchr/testify/mock"
)

// CwsService is an autogenerated mock type for the CwsService type
type CwsService struct {
	mock.Mock
}

// GetProductImage provides a mock function with given fields: path
func (_m *CwsService) GetProductImage(path string) ([]byte, string, error) {
	ret := _m.Called(path)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string) []byte); ok {
		r0 = rf(path)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(string) string); ok {
		r1 = rf(path)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(path)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetProducts provides a mock function with given fields:
func (_m *CwsService) GetProducts() (*model.ProductsResponse, error) {
	ret := _m.Called()

	var r0 *model.ProductsResponse
	if rf, ok := ret.Get(0).(func() *model.ProductsResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.ProductsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HeadProductImageForUrl provides a mock function with given fields: path
func (_m *CwsService) HeadProductImageForUrl(path string) (string, error) {
	ret := _m.Called(path)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(path)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
